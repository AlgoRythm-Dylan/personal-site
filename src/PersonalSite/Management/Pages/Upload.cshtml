@page
@model Management.Pages.UploadModel
@{
    ViewData["Title"] = "Upload";
}
<input type="file" accept="image/png, image/jpeg" id="image-upload"/>

<div class="image-upload-area" data-related-input="#image-upload">
    <p>Drag and drop image here or click to to open file picker</p>
</div>

<div id="hidden-before-upload">
    <div id="preview-and-palette">
        <div id="preview-box"></div>
        <div id="palette-box"></div>
    </div>

    <p id="brightness-label">
        Brightness: <span id="brightness-display"></span>
    </p>

    <div class="hline"></div>
</div>

@section Styles {
    <style>
        #image-upload {
            display: none;
        }
        #hidden-before-upload {
            display: none;
            flex-direction: column;
        }
        #brightness-label {
            text-align: center;
        }
        #preview-and-palette {
            flex-direction: column;
            min-height: 0px;
            max-height: 500px;
            max-width: 100%;
            overflow: hidden;
            width: auto;
            margin: var(--spacing-lg) auto;
            align-items: center;
        }
        #preview-box {
            overflow: hidden;
            display: flex;
            justify-content: center;
        }
        #preview-box > img {
            height: auto;
            width: auto;
            max-height: 100%;
            max-width: 100%;
            object-fit: contain;
        }
        #palette-box {
            display: flex;
            flex-direction: row;
            height: 30px;
        }
        #palette-box > div {
            flex: 1;
        }
    </style>
}
@section Scripts {
    <script>

        var elements = {
            imageUpload: null,
            hiddenBeforeUpload: null,
            brightnessLabel: null,
            brightnessDisplay: null,
            previewAndPalette: null,
            previewBox: null,
            paletteBox: null
        };

        addEventListener("load", () => {
            discoverElements();
            hookupEvents();
            resetPage();
        });

        function discoverElements() {
            elements.imageUpload = document.getElementById("image-upload");
            elements.hiddenBeforeUpload = document.getElementById("hidden-before-upload");
            elements.brightnessLabel = document.getElementById("brightness-label");
            elements.brightnessDisplay = document.getElementById("brightness-display");
            elements.previewAndPalette = document.getElementById("preview-and-palette");
            elements.previewBox = document.getElementById("preview-box");
            elements.paletteBox = document.getElementById("palette-box");
        }

        function hookupEvents() {
            elements.imageUpload.addEventListener("input", async e => {
                resetPage();
                await handleImageInput();
            });
        }

        async function handleImageInput(){
            elements.hiddenBeforeUpload.style.display = "flex";
            if(elements.imageUpload.files.length) {
                const info = await getImageInfoFromFile(elements.imageUpload.files[0]);
                for(let color of info.palette){
                    let display = document.createElement("div");
                    display.style.width = "25px";
                    display.style.height = "25px";
                    display.style.background = `rgb(${color[0]}, ${color[1]}, ${color[2]})`;
                    elements.paletteBox.appendChild(display);
                }
                elements.previewBox.appendChild(info.image);
                elements.paletteBox.style.width = `${(info.image.offsetHeight/info.image.naturalHeight) * info.image.naturalWidth}px`;
                elements.brightnessDisplay.innerHTML = Math.round(info.brightness * 100) + "%";
            }
        }

        function resetPage(){
            elements.hiddenBeforeUpload.style.display = "none";
            elements.brightnessDisplay.innerHTML = "";
            elements.previewBox.innerHTML = "";
            elements.paletteBox.innerHTML = "";
        }

    </script>
}